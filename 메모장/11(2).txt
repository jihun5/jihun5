점의 위치구하기(https://school.programmers.co.kr/learn/courses/30/lessons/120841)
7의 개수(https://school.programmers.co.kr/learn/courses/30/lessons/120912)
모음 제거(https://school.programmers.co.kr/learn/courses/30/lessons/120849)
n번째 원소까지(https://school.programmers.co.kr/learn/courses/30/lessons/181889)
flag에 따라 다른 값 반환하기(https://school.programmers.co.kr/learn/courses/30/lessons/181933?language=python3)
배열만들기 1(https://school.programmers.co.kr/learn/courses/30/lessons/181901)
부분 문자열(https://school.programmers.co.kr/learn/courses/30/lessons/181842)
원하는 문자열 찾기(https://school.programmers.co.kr/learn/courses/30/lessons/181878)
꼬리 문자열(https://school.programmers.co.kr/learn/courses/30/lessons/181841)
A강조하기(https://school.programmers.co.kr/learn/courses/30/lessons/181874)
특정한 문자를 대문자로 바꾸기(https://school.programmers.co.kr/learn/courses/30/lessons/181873)
배열의 길이에 따라 다른 연산하기(https://school.programmers.co.kr/learn/courses/30/lessons/181854)
가위 바위 보(https://school.programmers.co.kr/learn/courses/30/lessons/120839)
암호 해독(https://school.programmers.co.kr/learn/courses/30/lessons/120892)
대문자와 소문자(https://school.programmers.co.kr/learn/courses/30/lessons/120893)
주사위의 개수(https://school.programmers.co.kr/learn/courses/30/lessons/120845)


def solution(dot):
    if dot[0] > 0 and dot[1] > 0:
        answer = 1
    elif dot[0] < 0 and dot[1] > 0:
        answer = 2
    elif dot[0] < 0 and dot[1] < 0:
        answer = 3
    else:
        answer = 4
    return answer


def solution(array):
    answer = ""
    for i in array:
        answer += str(i)
    return answer.count("7")


def solution(my_string):
    i = ("a,e,i,o,u")
    for a in i:
        my_string = my_string.replace(a,"")
    return my_string

def solution(num_list, n):
    answer = num_list[:n]
    return answer

def solution(a, b, flag):
    answer = 0
    if flag == True:
        answer = a+b
    else:
        answer = a-b
    return answer

def solution(n, k):
    answer = []
    for a in range(1, n+1):
        if a%k == 0:
            answer.append(a)
    return answer

def solution(str1, str2):
    answer = 0
    if str1 in str2:
        answer = 1
    else:
        answer = 0
    return answer

def solution(myString, pat):
    answer = 0
    a = myString.lower()
    b = pat.lower()
    if b in a:
        answer = 1
    else:
        answer = 0
    return answer

def solution(str_list, ex):
    answer = ""
    for a in str_list:
        if not ex in a:
            answer += a
    return answer

def solution(myString):
    a = myString.lower()
    answer = a.replace("a", "A")
    return answer

def solution(my_string, alp):
    return my_string.replace(alp, alp.upper())

def solution(arr, n):
    answer = []
    for a in range(len(arr)):
        if len(arr)%2 != 0:
            if a%2 ==0:
                arr[a] += n
                answer.append(arr[a])
            else:
                answer.append(arr[a])
        elif len(arr)%2 == 0:
            if a%2 != 0:
                arr[a] += n
                answer.append(arr[a])
            else:
                answer.append(arr[a])
    return answer

def solution(rsp):
    a1 = {'2':'0', '0':'5', '5':'2'}
    answer = ""
    for i in rsp:
        answer += a1.get(i)
    return answer
    
def solution(cipher, code):
    answer = ''
    for i in range(code, len(cipher)+1):
        if i % code == 0:
            answer += cipher[i-1]
    return answer

def solution(my_string):
    return my_string.swapcase()

def solution(box, n):
    a = box[0]//n
    b = box[1]//n
    c = box[2]//n
    answer = a*b*c
    return answer
