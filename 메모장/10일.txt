301a6e235d72  : 내컨테이너 아이디

docker -a : 종료된 컨테이너 까지 나오고
docker stat (내컨테이너아이디) : docker 시작
docker ps : 현재 docker상태확인

doker ps -a : a는 all, 종료된 프로그램까지 조회
docker ps : 실행중인 프로그램 조회

docker start 컨테이너 ID
docker stop 컨테이너 ID
docker images : 도커 이미지 목록을 조회하는 명령어
docker run -it --name my_ubuntu ubuntu
:이름을 지정해서 우분투 리눅스 프로세스 생성
우분투는 최초 생성 후 exit하게 되면 , 종료되므로 다시 start시켜줘야한다.
docker 프로세스 삭제
1)docker stop 컨테이너 ID
2)docker rm 컨테이너ID

docker rmi 이미지ID
우분투 실행시
docker run -it --name my_ubuntu
나머지 대부분의 프로그램
docker run --name my_mysql(내가 지정한 이름) mysql

docker 컨테이너 내부로 접속
: docker exec -it my_ubuntu /bin/bash
my_ubuntu(내 컨테이너 명)

리눅스 명령어
디렉토리(폴더) 이동: cd 이동할 위치
pwd : 현재 위치 조회 명령어
최상단root경로는 /로 표현
root계정은 모든 계정이 있는 super계정
파일/디렉토리 목록 조회 : ls -al(권한,수정,생성된날짜 등)
ls - al test* : test로 시작하는 파일/ 폴더 조회 

상위폴더로 이동하는 법
1)상대경로 : cd ..
2)절대경로 : /etc
.은 현재 경로를 의미, ..은 상위경로를 의미
그냥 cd만 치면 홈 경로
cd / 하면 루트경로로 이동
cd 디렉토리명을 입력하면 디렉토리로 이동

rm-r 디렉토리명(폴더명):디렉토리 삭제
clear : 명령어 정리
mkdir +폴더명: 디렉토리 생성 명령어
rm은 디렉토리/파일 삭제
ctrl + C:실행중 명령어 취소
touch 파일명 : 빈 파일 생성
rm 삭제대상1 삭제대상2
rm -r 삭제대상1 삭제대상2(파일은 -r안에서도 삭제가능)

histroy : 사용했던 명령어의 history
cp 복사대상 복사할 곳 : 파일이나 디렉토리 복사 후 붙여넣기
cp 복사대상 복사할 위치와 파일명
cp -r: 하면 디렉토리까지 모두 복사
mv 이동대상 이동할 곳: 파일이나 디렉토리를 이동
mv : 잘라내서 붙여넣기, 이동, 이름을 바꿀때 사용
(mv test.txt ../test.txt, mv test.txt my_folder)
mv를 사용해서 /etc/myfolder에서 test_folder를 test2_folder
mv test_folder test2_folder (같은 위치에 tset폴더를 test2로 이름변경)
mv test_folder ./test2_folder(./현재위치에 )

test_folder를 상위폴더의 위치로 test2_folder

test.txt를 상위폴더로 이동

cat 파일명 : 파일 내용을 터미널(콘솔)에 출력
리눅스 vi편집기
리눅스 패키지 tool : apt
apt-get update : 패키지를 최신화
apt-get install vim : vi 편집기 install
sudo apt-get install vim(root의 계정의 권한을 빌려 vim설치)
vi test.txt 엔터 test.py도 무관함 그 파일 또는 py쪽으로 이동 
i 누르면 insert활성화 채팅치고 
esc 쉬프트 세미클론 
wq는 저장 q는 그냥 저장안하고 나가기(!하면 무조건 그냥 실행하기ex)q!)
esc는 명령모드 상태
insert상태가 아닌 첫 화면에서 빈 곳에 커서를 두고 x를 누르면 해당 칸삭제
attention 상태면 쭉내려서 e누르기
yy는 해당 줄 복사
p는 복사 한 줄 출력
gg는 첫번째 줄으로 이동
shift g는 맨 끝줄으로 이동
dd는 한줄 삭제
ctrl f 아래 페이지씩 이동
ctrl b는 위 페이지로 이동
e는 단어의 끝까지 가는것
$는 문장의 끝으로 가는 것 
숫자 0은 해당라인에서 맨앞으로 이동

sudo 명령어 : root계정의 권한을 빌려 명령어를 실행하는 것.
(sudo계정도 명령어도 회사 내규에따름)

chmod : 파일/디렉토리에 대한 권한 설정권한은 3개의 part로 구성되어있다. 
           (소유자(onwer), 소유자그룹(owner Group), others(그외))
	각파트는 rwx로 구성(read, write, 실행)
drwxr-xr-x(권한) 3 root root(소유,소유그룹) 4096(용량) jun 2 02:50(디폴트 utc시간, kst한국시간은 +9를해야)
drwxr-xr-x(권한) 1 root root(소유,소유그룹) 4096(용량) jun 2 02:50(utc시간)
-rw-(소유자readwirte)r--(소유자그룹)r--(그외)(권한)  1 root root(소유,소유그룹) 139(용량) jun 2 02:50(utc시간)
소유자그룹은 쓰고 읽을 수 있다. 소유자 그룹과 소유자는 읽을수만있다(수정, 삭제불가)
r:숫자4, w숫자2, x:숫자1
chmod 777 test.txt(rwx) 7=소유자,소유자그룹,그외 4+2+1 모든권한
= test.txt에 소유자, 소유자그룹, 그외 모든사람들에게 read write 실행 권한을 부여
소유자가 읽고, 쓸수 있는 권한이 있고, 그외 소유자그룹, other는 읽기 권한만 있도록 파일 권한 변경
= chmod 644

chown 소유자 : 소유자의 그룹 -> 해당 파일/디렉토리의 소유자와 소유자 그룹을 지정하는 명령어 
소유자 : 만든사람
소유자그룹 : 특정한 사용자 list를 그룹으로 묶어 놓은 개념, 
	    리눅스에서 모든 사용자는 어떠한 소유자 그룹에 소속되어있다
chown test:testgroup test.txt(파일명) test(계정명)에 test그룹(계정그룹명) 

grep : 특정문자열을 찾을 때 사용
find : 특정한 파일을 찾을 때 사용 
 
mysql 데이터 베이스 server > 스키마n개 > 테이블n개

docker run --name board_mysql -e MYSQL_ROOT_PASSWORD=1234 -d -p 3406:3306 mysql
3406:3306 폰트는 바꿨음

docker exec -it 컨테이너ID mysql -u root -p 
->mysql 접속 비밀번호는 창에 안뜸 비밀이지만 입력가능

mysql 문법
show databases;  데이터베이스(스키마)의 목록 조회, 반드시 ; 붙이기
모든 SQL 반드시 ; 으로 끝맺음.

create database board;  데이터 베이스(스키마) 생성
use board;  데이터 베이스 board 사용
create table 테이블이름 create table author(id INT)
-> ex)  create table author(id(필드이름) INT(필드타입), name VARCHAR(10), email VARCHAR(20));
show tables;  테이블보기
describe author;  테이블의 구성조회
테이블 : 
1) 열(column) = 필드 = 속성이라 부른다 
2) 행(row) = 데이터 = 레코드
drop table author;

DDL : 테이블/컬럼(id,int 등) 정의하는 명령어
1) create table ~, 
2) alter table ~, 
3) drop table ~

DML : 데이터 조회, 추가/수정/삭제(=CRUD : 추가, 조회, 수정, 삭제를 의미)
select ~, insert, update, delete
insert into 테이블 명(필드명1, 필드명2, 필드명3...) values(데이터값1, 데이터값2, 데이터값3....);
INSERT INTO author(id, name, email) valuse(1,'LEO','leo@gmail.com');
SELECT 필드이름(*,all) FROM 테이블 이름 [WHERE 조건]
select * from author;(*전체 조회)
select name, email from author;(name과 email만 조회)
limit 숫자 옵션을 주면 제한된 데이터만 조회 가능
ex) select * from author limit 1;
ex) select * from author where id = 1; 
쿼리문은 관용적으로 대문자 사용(대소문자구문X)
테이블명, 컬럼명은 대소문자 구분O
컬럼 생성 시 별다른 null관련 옵션을 주지 않으면 기본적으로 nullable(null은 비어있는 값)
Primary Key(PK) : 테이블에 저장된 레코드를 고유하게 식별하는 컬럼, Not Null + Unique
Foreing Key(FK) : 두 테이블을 연결하는 데 사용하는 KEY
mysql에서 두 단어가 결합된 컬럼명을 지정할 때 a단어_b단어 형태로ex) create_at
INT(4바이트 할당), BIGINT(8바이트 할당), 4바이트는 약 20~40억 까지 표현가능


DCL : 사용자 권한 관리
