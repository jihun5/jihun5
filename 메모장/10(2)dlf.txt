오늘의 문제 
숨어있는  숫자의 덧셈(1) (https://school.programmers.co.kr/learn/courses/30/lessons/120851) 함수
순서쌍의 개수(https://school.programmers.co.kr/learn/courses/30/lessons/120836)
문자열 앞의 n글자(https://school.programmers.co.kr/learn/courses/30/lessons/181907?language=python3)
문자열로 전환(https://school.programmers.co.kr/learn/courses/30/lessons/181845)
원소들의 곱과합(https://school.programmers.co.kr/learn/courses/30/lessons/181929)
문자열을 정수로 변환하기(https://school.programmers.co.kr/learn/courses/30/lessons/181848)
주사위 게임1(https://school.programmers.co.kr/learn/courses/30/lessons/181839)
n개 간격의 원소들(https://school.programmers.co.kr/learn/courses/30/lessons/181888)
홀수vs짝수(https://school.programmers.co.kr/learn/courses/30/lessons/181887)
접미사 인지 확인하기(https://school.programmers.co.kr/learn/courses/30/lessons/181908)
문자열 곱하기(https://school.programmers.co.kr/learn/courses/30/lessons/181940)
접두사 확인하기(https://school.programmers.co.kr/learn/courses/30/lessons/181906)
뒤에서 5등 위로(https://school.programmers.co.kr/learn/courses/30/lessons/181852)
뒤에서 5등 까지(https://school.programmers.co.kr/learn/courses/30/lessons/181853)
홀짝에 따라 다른 값 반환하기(https://school.programmers.co.kr/learn/courses/30/lessons/181935)


import re(정규식과 매치되는 모든 문자열을 리스트 형식으로 리턴)
def solution(my_string):
    answer = re.findall(r'\d', my_string)(정규식과 매치되는 모든 문자열을 리스트 형식으로 리턴)
				#findall(pattern, string) 문자열의 pattern 찾고 리스트로 리턴
    answer = [int(i) for i in answer](리스트를 정수형으로 바꿔주기)
    return sum(answer)


def solution(n):
    answer = []
    for i in range(1,n+1):
        if n % i == 0:
            answer.extend([(i, n//i)])
    return len(answer) 

def solution(my_string, n):
    answer = ''.join(my_string[:n])
    return answer

def solution(n):
    answer = str(n)
    return answer

def solution(num_list):
    answer = 0
    mul = 1
    add = 0
    for a in num_list:
        mul *= a
        add += a
        add2 = add**2
    if mul > add2:
        answer = 0
    else:
        answer = 1
    return answer

def solution(n_str):
    answer = int(n_str)
    return answer 

def solution(a, b):
    answer = 0
    if a%2 !=0 and b%2 !=0:
        answer = (a**2)+(b**2)
    elif a%2 ==0 and b%2 ==0:
        answer = abs(a-b)
    else:
        answer = 2*(a+b)
    return answer

def solution(num_list, n):
    answer = []
    answer = num_list[::n]
    return answer

def solution(num_list):
    answer = 0
    a = num_list[::2]
    a1 = num_list[1::2]
    num1 = 0
    num2 = 0
    for i in a:
        num1 += i
    for e in a1:
        num2 += e
    if num1 > num2:
        answer = num1
    else:
        answer = num2
    return answer

def solution(my_string, is_suffix):
    answer_list = [my_string[i:] for i in range(len(my_string))]
    return 1 if is_suffix in answer_list else 0
# def solution(my_string, is_suffix): 노상관
my_string = "banana" 
is_suffix = "ana"
# answer_list를 만들었고
# 주어진 answer_list에 my_string을 슬라이싱할건데 
# i부터 끝까지 슬라이싱을 할거야 범위는 len(my_string)
# 즉 i값은 012345 i부터 끝까지 다 잘라내기
# retunr 1을 출력할던데 is_suffix가 answer_list안에 있으면 1을 출력하고
# 없으면 0을 출력한다
# nan가 없는 이유는 nana가 짤리고 그다음 ana가 짤리기에 없다는 표시가 뜨는것이다

def solution(my_string, k):
    answer = ''.join(my_string*k)
    return answer

def solution(my_string, is_prefix):
    answer_list = [my_string[:i] for i in range(len(my_string))]
    return 1 if is_prefix in answer_list else 0

def solution(num_list):
    num_list.sort()
    answer = num_list[5:]
    return answer

def solution(num_list):
    num_list.sort()
    answer = num_list[:5]
    return answer

def solution(n):
    answer = 0
    if n%2 != 0:
        for a in range(0, n+1):
            if a%2 !=0:
                answer += a
    elif n%2 ==0:
        for a in range(0, n+1):
            if a%2 ==0:
                answer += a**2
    return answer
