수 조작하기1(https://school.programmers.co.kr/learn/courses/30/lessons/181926)
공백으로 구분하기 2(https://school.programmers.co.kr/learn/courses/30/lessons/181868)
배열의 원소만큼 추가하기(https://school.programmers.co.kr/learn/courses/30/lessons/181861)
5명씩(https://school.programmers.co.kr/learn/courses/30/lessons/181886)
l로 만들기(https://school.programmers.co.kr/learn/courses/30/lessons/181834)
피자 나눠 먹기(2)(https://school.programmers.co.kr/learn/courses/30/lessons/120815)
모스부호(1)(https://school.programmers.co.kr/learn/courses/30/lessons/120838)
날짜비교하기(https://school.programmers.co.kr/learn/courses/30/lessons/181838)
할 일 목록(https://school.programmers.co.kr/learn/courses/30/lessons/181885)
2차원으로 만들기(https://school.programmers.co.kr/learn/courses/30/lessons/120842)

------------------------------------------------------------------------------------------------------

문자열 바꿔서 찾기(https://school.programmers.co.kr/learn/courses/30/lessons/181864)
더 크게 합치기(https://school.programmers.co.kr/learn/courses/30/lessons/181939)
배열 비교하기(https://school.programmers.co.kr/learn/courses/30/lessons/181856)
★문자열 정렬하기1(https://school.programmers.co.kr/learn/courses/30/lessons/120850)
★부분 문자열 이어 붙여 문자열 만들기(https://school.programmers.co.kr/learn/courses/30/lessons/181911)
A를 B로만들기(https://school.programmers.co.kr/learn/courses/30/lessons/120886)
k의 개수(https://school.programmers.co.kr/learn/courses/30/lessons/120887)
특수문자 출력하기(https://school.programmers.co.kr/learn/courses/30/lessons/181948)

def solution(myString, pat):
    A = myString.replace("A", "N")
    A1 = A.replace("B", "A")
    B = A1.replace("N", "B")
    if pat not in B:
        answer = 0
    elif pat in B:
        answer = 1
    return answer

def solution(a, b):
    A = str(a)
    B = str(b)
    if int(A + B) >= int(B + A):
        answer = int(A+B)
    else:
        answer = int(B+A)
    return answer

def solution(arr1, arr2):
    answer = 0
    num1 = 0
    num2 = 0
    if len(arr1) < len(arr2):
         answer = -1
    elif len(arr1) > len(arr2):
         answer = 1
    if len(arr1) == len(arr2):
         for a in arr1:
              num1 += a
         for i in arr2:
              num2 += i
              if num1 > num2:
                   answer = 1
              elif num1 < num2:
                   answer = -1
              elif num1 == num2:
                   answer = 0
    return answer

★★def solution(my_string):
    import re
    # numbers = re.sub(r'[^0-9]',"", my_string)
    # 12392
    # numbers = re.findall(r'\d+', my_string)
    # ['12392']
    numbers = re.findall(r'\d', my_string)
    # ['1','2','3','9','2']
    numbers.sort()
    answer = list(map(int,numbers))
    return answer

★def solution(my_strings, parts):
    answer = ''
    for i in range(len(my_strings)):
        answer += my_strings[i][parts[i][0] : parts[i][1] + 1]
    return answer

def solution(before, after):
    A = sorted(before)
    B = sorted(after)
    if A == B:
        answer = 1
    else:
        answer = 0
    return answer

def solution(i, j, k):
    answer = 0
    num = []
    for a in range(i, j+1):
        if str(k) in str(a):
            num.append(a)
    str(num)
    answer = str(num).count(str(k))
    return answer

print('!@#$%^&*(\\\'"<>?:;')